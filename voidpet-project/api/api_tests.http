@baseUrl = http://localhost:7071/api

### 1. Create a new Pet (Successful Case)
# @name createPikachu
POST {{baseUrl}}/CreatePet
Content-Type: application/json

{
    "name": "Pikachu"
}

### 2. Create a Pet with no name (Expect 400 Bad Request)
POST {{baseUrl}}/CreatePet
Content-Type: application/json

{}

### 3. Create a Pet with empty name (Expect 400 Bad Request)
POST {{baseUrl}}/CreatePet
Content-Type: application/json

{
    "name": ""
}

### 4. Create a Pet with invalid JSON (Expect 400 Bad Request from Function Host or your parsing)
POST {{baseUrl}}/CreatePet
Content-Type: application/json

{
    "name": "Raichu", 
}


### 5. Get an existing Pet by query parameter (Successful Case)
# Make sure to replace "generated-pikachu-id-123" with an actual ID from CreatePet response
# @name getPikachuById
GET {{baseUrl}}/GetPet?id=q7go4npjyr

### 6. Get Pet using POST with ID in body (if your GetPet handler supports this)
POST {{baseUrl}}/GetPet
Content-Type: application/json

{
    "id": "q7go4npjyr"
}

### 7. Get a non-existent Pet (Expect 404 Not Found)
GET {{baseUrl}}/GetPet?id=this-id-does-not-exist

### 8. Get Pet with no ID (Expect 400 Bad Request)
GET {{baseUrl}}/GetPet

### 9. Save/Update an existing Pet (Successful Case)
# Replace "generated-pikachu-id-123" with an actual ID
PUT {{baseUrl}}/SavePet
Content-Type: application/json

{
    "id": "s3re66pbej",
    "name": "Pikachu Evolved", 
    "dateCreated": "2025",
    "stats":{
        "entertainment": 100,
        "hunger": 50,
        "tiredness": 20
    }
    // Add other fields your Pet model might have
    // The 'lastInteraction' field will be updated by your function
}

### 10. Save Pet with no ID in body (Expect 400 Bad Request)
PUT {{baseUrl}}/SavePet
Content-Type: application/json

{
    "name": "Missing ID Pet"
}

### 11. Save Pet with non-existent ID (Behavior depends on your StorageService.savePet logic)
# It might return 404 if you check existence first, or it might create it (upsert)
# For now, let's assume it might error or beÂºhave unexpectedly until StorageService is robust
PUT {{baseUrl}}/SavePet
Content-Type: application/json

{
    "id": "this-id-does-not-exist-for-saving",
    "name": "Ghost Pet"
}